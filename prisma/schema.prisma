
  generator client {
    provider = "prisma-client-js"
  }

  datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
  }

  model User {
    id       String  @id @default(cuid())
    name          String?
    email         String   @unique
    password String?  
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt 
    emailVerified DateTime?
    image         String?
    role Role @default(user)

    accounts      Account[]
    sessions      Session[]
    @@index([email])
  }

  model Account {
    id                 String  @id @default(cuid())
    userId             String
    type               String
    provider           String
    providerAccountId  String
    refresh_token      String?  @db.Text
    access_token       String?  @db.Text
    expires_at         Int?
    token_type         String?
    scope              String?
    id_token           String?  @db.Text
    session_state      String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
  }

  model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
  }

  model Category {
    id           String   @id @default(cuid())
    label        String         @unique
    icon         CategoryIcon   @unique
    description  String
  }

  model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
  }

  enum Role {
    admin
    user
  }

  enum CategoryIcon {
    GiBarn
    GiBoatFishing
    GiCactus
    GiCastle
    GiCaveEntrance
    GiForestCamp
    GiIsland
    GiWindmill
    TbBeach
    TbMountain 
    TbPool
    FaSkiing
    BsSnow
    IoDiamond
    MdOutlineVilla
  }
